import pygtk
pygtk.require('2.0')
import gtk
import appindicator
import sys
import pynotify
from pycloudapp.cloud import Cloud
import os
mycloud = Cloud()
mycloud.auth('lego399@gmail.com', 'CdE33345tG')
# mycloud.list_items()
# for arg in sys.argv[1:]:
#	mycloud.upload_file(arg)

class AppIndicatorExample:
    def __init__(self):
        self.ind = appindicator.Indicator ("example-simple-client", "ubuntu-one", appindicator.CATEGORY_APPLICATION_STATUS)
        self.ind.set_status (appindicator.STATUS_ACTIVE)
        self.ind.set_attention_icon ("cloudapp-uploading-black")
        self.ind.set_icon("cloudapp-idle-black")

	# defines functions
	
	def uploadScreenshot():
		os.system("scrot -s tempfile.png")
		# self.ind.set_status (appindicator.STATUS_ATTENTION)
		mycloud.upload_file('tempfile.png')
		self.ind.set_status (appindicator.STATUS_ACTIVE)
		os.system("""notify-send 'File has been uploaded'""")
		# self.ind.set_status (appindicator.STATUS_ACTIVE)
		self.ind.set_icon("cloudapp-success-black")
		os.system("sleep 3")
		self.ind.set_icon("cloudapp-idle-black")
		
	def uploadscreenshot_callback(widget=None, data=None):
		self.ind.set_status (appindicator.STATUS_ATTENTION)
		uploadScreenshot()

        # create a menu
        self.menu = gtk.Menu()

        # create items for the menu - labels, checkboxes, radio buttons and images are supported:
        
        item = gtk.MenuItem("Upload Screenshot")
        item.connect("activate", uploadscreenshot_callback)
        item.show()
        self.menu.append(item)

        check = gtk.CheckMenuItem("Check Menu Item")
        check.show()
        self.menu.append(check)

        radio = gtk.RadioMenuItem(None, "Radio Menu Item")
        radio.show()
        self.menu.append(radio)

        image = gtk.ImageMenuItem(gtk.STOCK_QUIT)
        image.connect("activate", self.quit)
        image.show()
        self.menu.append(image)
                    
        self.menu.show()

        self.ind.set_menu(self.menu)

    def quit(self, widget, data=None):
        gtk.main_quit()


def main():
    gtk.main()
    return 0

if __name__ == "__main__":
    indicator = AppIndicatorExample()
    main()
